[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<button type=\"button\" class=\"btn btn-primary btn-sm\" id=\"open_stock_dialog\">Stock Check</button>\n",
  "modified": "2025-06-08 23:44:28.736767",
  "name": "Stock Check",
  "private": 0,
  "roles": [],
  "script": "setTimeout(() => {\n  const button = root_element.querySelector(\"#open_stock_dialog\");\n\n  if (!button) return;\n\n  button.addEventListener(\"click\", () => {\n    const d = new frappe.ui.Dialog({\n      title: \"Stock Check\",\n      size: \"large\",\n      fields: [\n        {\n          fieldtype: \"Section Break\",\n          label: \"Filters\"\n        },\n        {\n          label: \"Item\",\n          fieldname: \"item_code\",\n          fieldtype: \"Link\",\n          options: \"Item\"\n        },\n        {\n          fieldtype: \"Column Break\"\n        },\n        {\n          label: \"Item Group\",\n          fieldname: \"item_group\",\n          fieldtype: \"Link\",\n          options: \"Item Group\"\n        },\n        {\n          fieldtype: \"Column Break\"\n        },\n        {\n          label: \"Warehouse\",\n          fieldname: \"warehouse\",\n          fieldtype: \"Link\",\n          options: \"Warehouse\"\n        },\n        {\n          fieldtype: \"Section Break\"\n        },\n        {\n          label: \"Exclude Zero Quantity\",\n          fieldname: \"exclude_zero_qty\",\n          fieldtype: \"Check\",\n          default: 1\n        },\n        {\n          fieldtype: \"Section Break\"\n        },\n        {\n          label: \"Check Stock\",\n          fieldname: \"check_stock\",\n          fieldtype: \"Button\"\n        },\n        {\n          fieldname: \"results_html\",\n          fieldtype: \"HTML\"\n        }\n      ],\n      primary_action_label: \"Close\",\n      primary_action: () => d.hide()\n    });\n\n    \n    // Check Stock button logic\n    d.fields_dict.check_stock.input.onclick = async () => {\n      const values = d.get_values();\n      if (!values) return;\n\n      const res = await frappe.call({\n        method: \"hanif_traders.api.stock_check.get_stock_balance\",\n        args: {\n          item_code: values.item_code,\n          item_group: values.item_group,\n          warehouse: values.warehouse\n        }\n      });\n\n      const data = res.message || [];\n      console.log(\"Result from server\", data);\n      console.table(data);\n      \n      const excludeZero = values.exclude_zero_qty;\n      const formattedData = (res.message || [])\n        .filter(row => !excludeZero || row.actual_qty > 0)\n        .map(row => ({\n          'Item': row.item_code || \"\",\n          'Item Name': row.item_name || \"\",\n          'Item Group': row.item_group || \"\",\n          'Warehouse': row.warehouse || \"\",\n          'Actual Qty': row.actual_qty || 0,\n          'Is Non-Stock': row.is_stock_item\n        }));\n\n      console.table(\"Formatted Data:\",formattedData);\n      const wrapper = d.fields_dict.results_html.$wrapper;\n      wrapper.empty();\n\n      const table_container = document.createElement('div');\n      wrapper.append(table_container);\n\n      new frappe.DataTable(table_container, {\n        columns: [\n          { name: 'Item',width: 200,format: (value) => `<a href=\"/app/item/${value}\" target=\"_blank\">${value}</a>`},\n          { name: 'Item Name', width: 300 },\n          { name: 'Item Group', width: 200 },\n          { name: 'Warehouse', width: 200 },\n          { name: 'Actual Qty', width: 100 },\n          { name: 'Is Non-Stock',width: 120,format: value => value ? '❌' : '✅'}\n        ],\n        data: formattedData,\n        layout: 'fixed',\n        noDataMessage: \"No items matched your filters.\",\n        inlineFilters:true,\n        enableSorting:true\n      });\n    };\n    d.show();\n  });\n}, 500);\n",
  "style": null
 }
]